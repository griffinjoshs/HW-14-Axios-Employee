{"version":3,"sources":["components/Directory/Directory.js","App.js","reportWebVitals.js","index.js"],"names":["Directory","props","employees","useState","array","setArray","sortType","setSortType","search","setSearch","useEffect","filteredEmployees","filter","employee","firstNameEmployee","name","first","toLowerCase","indexOf","lastNameEmployee","last","sortAscending","slice","sort","a","b","toUpperCase","sortDescending","className","onChange","event","target","value","id","type","placeholder","scope","onClick","map","index","src","picture","thumbnail","alt","title","cell","email","App","setEmployees","axios","get","then","response","console","log","data","results","catch","err","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.894eb552.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../Directory/Directory.css\";\nimport { FaSortAlphaDown } from \"react-icons/fa\";\n\n\nconst Directory = (props) => {\n  const { employees } = props;\n  const [array, setArray] = useState([]);\n  const [sortType, setSortType] = useState(\"ASC\");\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    setArray(filteredEmployees);\n  }, [employees, search]);\n\n  const changeHandler = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const filteredEmployees = employees.filter((employee) => {\n    let firstNameEmployee =\n      employee.name.first.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n      let lastNameEmployee =\n      employee.name.last.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n      return firstNameEmployee || lastNameEmployee;\n  });\n\n  const sortLastName = () => {\n    switch (sortType) {\n      case \"ASC\":\n        setArray(sortDescending());\n        setSortType(\"DESC\");\n        break;\n      case \"DESC\":\n        setArray(sortAscending());\n        setSortType(\"ASC\");\n        break;\n      default:\n        setArray(sortAscending());\n    }\n  };\n\n  const sortAscending = () => {\n    return employees\n      .slice()\n      .sort((a, b) =>\n        a.name.last.toUpperCase() < b.name.last.toUpperCase() ? -1 : 1\n      );\n  };\n\n  const sortDescending = () => {\n    return employees\n      .slice()\n      .sort((a, b) =>\n        a.name.last.toUpperCase() > b.name.last.toUpperCase() ? -1 : 1\n      );\n  };\n\n  return (\n    <div>\n      <div className=\"container mt-3\">\n      <div className=\"row\">\n      <h1>Search Employee Directory</h1>\n        <input\n          onChange={changeHandler}\n          id=\"search\"\n          className=\"form-control\"\n          name=\"search\"\n          type=\"search\"\n          placeholder='search for name'\n        />\n        <button className=\"btn btn-primary\">Search</button>\n    <div className=\"container mt-3\" id=\"directory\">\n      <br></br>\n      <br></br>\n      <br></br>\n\n      <h1>Employee Directory</h1>\n      <table className=\"table\">\n      <thead>\n        <tr>\n          {/* option, shift, down-arrow to duplicate line*/}\n          <th scope=\"col\">#</th>\n          <th scope=\"col\"></th>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">First</th>\n          <th scope=\"col\">Last<FaSortAlphaDown onClick={sortLastName} className='directory__icon' /></th>\n          <th scope=\"col\">Cell</th>\n          <th scope=\"col\">Email</th>\n        </tr>\n      </thead>\n      <tbody>\n        {array.map((employee, index) => (\n          <tr key={index}>\n            <th scope=\"row\">\n              {index}\n            </th>\n            <td>\n              <img src={employee.picture.thumbnail} alt=\"employee\" />\n            </td>\n            <td>{employee.name.title}</td>\n            <td>{employee.name.first}</td>\n            <td>{employee.name.last}</td>\n            <td>{employee.cell}</td>\n            <td>{employee.email}</td>\n          </tr>\n        ))}\n      </tbody>\n      </table>\n    </div>\n    </div>\n    </div>\n    </div>\n  );\n};\n\nexport default Directory;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Directory from \"./components/Directory/Directory\";\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://randomuser.me/api/?results=100\")\n      .then((response) => {\n        console.log(response);\n        console.log(response.data.results);\n        setEmployees(response.data.results);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <Router className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Directory employees={employees} setEmployees={setEmployees} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}